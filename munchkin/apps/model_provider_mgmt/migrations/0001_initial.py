# Generated by Django 4.2.7 on 2024-06-18 03:24

import apps.core.encoders
import apps.core.mixinx
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('knowledge_mgmt', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmbedProvider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='名称')),
                ('embed_model', models.CharField(choices=[('fastembed', 'FastEmbed'), ('openai', 'OpenAI'), ('bceembedding', 'BCEEmbedding')], max_length=255, verbose_name='嵌入模型')),
                ('embed_config', models.JSONField(blank=True, default=dict, encoder=apps.core.encoders.PrettyJSONEncoder, null=True, verbose_name='嵌入配置')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': 'Embed模型',
                'verbose_name_plural': 'Embed模型',
            },
            bases=(models.Model, apps.core.mixinx.EncryptableMixin),
        ),
        migrations.CreateModel(
            name='LLMModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='名称')),
                ('llm_model', models.CharField(choices=[('chat-gpt', 'ChatGPT')], max_length=255, verbose_name='LLM模型')),
                ('llm_config', models.JSONField(blank=True, default=dict, encoder=apps.core.encoders.PrettyJSONEncoder, null=True, verbose_name='LLM配置')),
                ('enabled', models.BooleanField(default=True, verbose_name='启用')),
            ],
            options={
                'verbose_name': 'LLM模型',
                'verbose_name_plural': 'LLM模型',
            },
            bases=(models.Model, apps.core.mixinx.EncryptableMixin),
        ),
        migrations.CreateModel(
            name='RerankProvider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='名称')),
                ('rerank_model', models.CharField(choices=[('bce', 'BCE')], max_length=255, verbose_name='Rerank模型')),
                ('rerank_config', models.JSONField(blank=True, default=dict, encoder=apps.core.encoders.PrettyJSONEncoder, null=True, verbose_name='Rerank配置')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': 'Rerank模型',
                'verbose_name_plural': 'Rerank模型',
            },
            bases=(models.Model, apps.core.mixinx.EncryptableMixin),
        ),
        migrations.CreateModel(
            name='LLMSkill',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='名称')),
                ('skill_id', models.CharField(blank=True, choices=[('action_llm_fallback', '开放领域问答'), ('action_llm_jenkins_build_analysis', 'Jenkins构建异常分析'), ('action_llm_ticket_summary', '智能提单总结'), ('action_llm_code_review', '代码审查')], max_length=255, null=True, verbose_name='技能类型')),
                ('skill_prompt', models.TextField(blank=True, null=True, verbose_name='技能提示词')),
                ('enable_conversation_history', models.BooleanField(default=False, verbose_name='启用对话历史')),
                ('conversation_window_size', models.IntegerField(default=10, verbose_name='对话窗口大小')),
                ('enable_rag', models.BooleanField(default=False, verbose_name='启用RAG')),
                ('enable_rag_knowledge_source', models.BooleanField(default=False, verbose_name='显示RAG知识来源')),
                ('rag_score_threshold', models.FloatField(default=0.7, verbose_name='RAG分数阈值')),
                ('knowledge_base_folders', models.ManyToManyField(blank=True, to='knowledge_mgmt.knowledgebasefolder', verbose_name='知识库')),
                ('llm_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='model_provider_mgmt.llmmodel', verbose_name='LLM模型')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LLM技能管理',
                'verbose_name_plural': 'LLM技能管理',
            },
        ),
    ]
